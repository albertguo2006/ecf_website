:root {
    --ecf-green: #749B88;
    --ecf-red: #FC6467;
    --link-blue: #2F80ED;
    --border-color: silver;
}

* {
    margin: 0;
    padding: 0;
}

h1 {
    font-family: "Montserrat", sans-serif;
}

a, h2 {
    font-family: "Quicksand", sans-serif;
    font-size: 1.15rem;
    font-weight: 600;
}

a {
    color: white;
}

a:hover {
    color: var(--link-blue);
}

html, body {
    height: 100%;
}

body {
    display: flex;
    flex-direction: column;
    height: 100%;
    background-color: lightblue;
}


nav {
    display: flex;
    flex-direction: row;
    height: 12vh;
    width: 100vw;
    background-color: white;
}

nav img {
    height: 8vh;
    padding: 2vh 0 2vh 2vw;
}

nav ul {
    list-style: none;
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    /* No grid gap in favour of borders for each individual li */
    width: 70%;
    height: 12vh;
    margin: auto 0 auto auto;
    background-color: var(--border-color);
}

nav li {
    position: relative;
    border-top: 1.5vh solid white;
    border-bottom: 1.5vh solid white;
    /* This specific border behaviour causes weird artifacting, but I think I prefer it this way*/
    border-left: 0.007vw solid var(--border-color);
    border-right: 0.007vw solid var(--border-color);
}

.nav-home-border {
    border-left: 0;
}

nav li a {
    display: flex;
    align-items: center;
    justify-content: center;
    text-decoration: none;
    height: 100%;
    color: black;
    background-color: white;
}

nav li a:hover {
    color: var(--ecf-green);
}

.current {
    border-bottom: 1.5vh solid var(--ecf-green);
}

.nav-dropdown {
    display: none;
    position: absolute;
    width: 100%;
}

.fa-caret-up {
    display: none;
}

/* IDK why this works to show the dropdown, but it does, so don't remove this unless a better solution is found */
li:hover .nav-dropdown, li:hover .fa-caret-up {
    display: flex;
    flex-direction: column;
}

li:hover .fa-caret-down {
    display: none;
}

/*
We use separate elements for border and content because we need them to be a different colour
While the border is white, the gap between the content isn't.
Trying to put these two requirements in the same element would be a pain, and it's probably just easier to use two divs
*/
.nav-dropdown-border {
    display: flex;
    flex-direction: column;
    padding: 0 0.75vw;
    background-color: white;
}

.nav-dropdown-content {
    display: flex;
    row-gap: 0.15rem;
    flex-direction: column;
    background-color: var(--border-color);
}

.nav-dropdown-content a {
    padding: 0.75vw;
    justify-content: left;
}

.nav-donate-border {
    border-top: 1.5vh solid var(--ecf-green);
    border-bottom: 1.5vh solid var(--ecf-green);
}

.nav-donate-border:hover {
    border-top: 1.5vh solid black;
    border-bottom: 1.5vh solid black;
}

.nav-donate {
    background-color: var(--ecf-green);
}

.nav-donate-border:hover .nav-donate {
    background-color: black;
    /*
    We need to specifically specify this here as the default behaviour at the time of writing is to only
    change the colour of the text upon text hover. That's too late for this instance,
    where we need the colour of the text to change upon border hover
    */
    color: var(--ecf-green);
}

.content {
    flex: 1 0 auto;
}

.footer {
    /* TODO: USE THIS INSTEAD OF BACKGROUND COLOUR WHEN IT IS AVAILABLE
    background-image: url("/assets/footer.png");
    */
    background-color: var(--ecf-green);
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100vw;
    color: white;
    padding: 2em 0 3em;
    text-align: center;
}

.footer .contact {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100%;
    font-size: 2vh;
    margin: 1em 0;
}

.footer .socials {
    display: flex;
    width: 50vh;
    align-items: center;
    justify-content: space-evenly;
    margin: 2em 0 0;
}
