/* The following css file follows the BEM naming convention (https://getbem.com/naming/) */
/* Note that if magic numbers are used, chances is that there's no special meaning behind it and that it just looks nice */
:root {
    --ecf-green: #749b88;
    --ecf-green-rgb: 116, 155, 136;
    --ecf-green-translucent: rgba(var(--ecf-green-rgb), 0.7);
    --ecf-red: #fc6467;
    --border-color: silver;
    --nav-height: 10vh;
    --h1-size: 3vw;
    --h2-size: 1.4vw;
    --arbitrary-card-min-width: 250px;
}

* {
    margin: 0;
    padding: 0;
}

h1 {
    font-family: "Montserrat", sans-serif;
    font-size: var(--h1-size);
}

a,
h2 {
    font-family: "Quicksand", sans-serif;
    font-size: var(--h2-size);
}

a {
    color: white;
    text-decoration: none;
}

a:hover {
    color: var(--ecf-green);
}

html,
body {
    height: 100%;
}

body,
.wrapper {
    /* Flex to ensure sticky footer */
    display: flex;
    flex-direction: column;
    height: 100%;
}

.parallax {
    /* Create the parallax scrolling effect. NOTE THAT WE STILL NEED A BG IMAGE! */
    background-attachment: fixed;
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
}

.parallax--full-width-height {
    width: 100vw;
    height: calc(110vh - var(--nav-height));
}

.orange-bar {
    width: 10vw;
    height: 0;
    border-top: 0.7vh solid var(--ecf-red);
}

.orange-bar--20 {
    width: 20vw;
}

.transparent-button {
    width: 25vw;
    color: black;
    background: rgba(0, 0, 0, 0);
    border: 0.1rem solid black;
    border-radius: 1rem;
    padding: 2vh 0;
    text-align: center;
    font-weight: bolder;
}

.transparent-button:hover {
    color: var(--ecf-green);
    background-color: black;
}

.transparent-button--white {
    color: white;
    border-color: white;
}

.transparent-button--white:hover {
    background-color: white;
}

.content {
    /* Default sticky footer stuff*/
    display: flex;
    flex-direction: column;
    flex: 1 0 auto;
}

.greeter-overlay {
    display: flex;
    flex-direction: column;
    row-gap: 3vh;
    position: absolute;
    bottom: 20vh;
    left: 5vw;
    width: 25%;
    color: white;
}

/* Separate orange bar from content */
.greeter-overlay > div > h1 {
    margin: 0 0 1vh;
}

/* Add more emphasis to the text */
.greeter-overlay h1 {
    font-size: calc(var(--h1-size) * 1.25);
    color: white;
}

/* Add more emphasis to the text */
.greeter-overlay h2 {
    font-size: calc(var(--h2-size) * 1.25);
    color: white;
}

/* Nav start */
/* TODO mobile nav */
nav {
    display: flex;
    flex-direction: row;
    height: var(--nav-height);
    width: 100vw;
    background-color: white;
    align-items: center;
}

nav .nav__logo {
    /* Ensure that height does not exceed var(--nav-height) */
    height: calc(var(--nav-height) - 2vh);
    padding: 0 0 0 2vw;
    color: black;
}

nav > ul {
    list-style: none;
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    /* No grid gap in favour of borders for each individual li */
    /* width of 70% to ensure some spacing between the logo and everything else */
    width: 70%;
    height: 100%;
    /* The nice and handy align left */
    margin: auto 0 auto auto;
}

nav > ul > li {
    /* The position: relative is important! Without this, the width 100% will not work for the nav dropdown*/
    position: relative;
    /*
    This specific border behaviour causes weird artifacting, but I think I prefer it this way.
    No specific reason why these border sizes were chose, just ensure that they are the same
    Update: After fixing some other styles, the artifacting seems to be mostly gone.
    */
    border-left: 0.15vw solid var(--border-color);
}

nav li:first-child {
    /* We don't want a left divider on the left most element */
    border-left: 0;
}

nav li:last-child {
    /* Remove the left divider between the last and second last element as the last is expected to be a different colour */
    border-left: 0;
}

nav li:last-child > a {
    /* This is expected to be the donate button */
    background-color: var(--ecf-green);
}

nav li:last-child > a:hover {
    /* This is expected to be the donate button */
    background-color: black;
}

nav > ul > li a {
    /* Just positioning for nav links */
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100%;
    color: black;
}

nav li > a:hover {
    color: var(--ecf-green);
}

nav > ul > li > a > .nav__current-indicator {
    position: absolute;
    /* We want the indicator to be at the bottom of the nav */
    bottom: 0;
    width: 100%;
    height: 1vh;
    background-color: var(--ecf-green);
}

/* Some code to change the display of the up/down caret depending on whether it's parent is being hovered on. */
nav .nav__about-caret > .fa-caret-up {
    display: none;
}

nav li:hover > .nav-dropdown,
nav li:hover .nav__about-caret > .fa-caret-up {
    display: block;
}

nav li:hover .nav__about-caret > .fa-caret-down {
    display: none;
}

/* Some stuff to affect the display of the dropdown/caret icon */
.nav-dropdown {
    display: none;
    position: absolute;
    width: 100%;
}

/*
We use separate elements for border and content because we need them to be a different colour
While the border is white, the gap between the content isn't.
Trying to put these two requirements in the same element would be a pain, and it's probably just easier to use two divs.
This also has the added benefit of still showing the dropdown contents even when the mouse is slightly outside of it.
*/
.nav-dropdown__border {
    display: flex;
    flex-direction: column;
    padding: 0 0.75vw;
    background-color: white;
}

.nav-dropdown__content {
    display: flex;
    flex-direction: column;
}

.nav-dropdown__content > a {
    /* Slightly off left effect */
    padding: 0.75vw;
    justify-content: left;
    border-top: 0.15rem solid var(--border-color);
}

.nav-dropdown__content > a:first-child {
    /* Remove the top border on the first element */
    border-top: 0;
}

/* Nav end */

/* Footer start */
/* TODO minor adjustments for mobile footer*/
footer {
    display: flex;
    flex-direction: column;
    row-gap: 7vh;
    width: 100vw;
    padding: 5vh 0;
    color: white;
    background-image: url("./img/footer.webp");
    /* bg-colour as backup */
    background-color: var(--ecf-green);
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
}

footer .footer__contact {
    text-align: center;
    width: 100%;
    font-size: 1.4vw;
}

footer .footer__socials {
    display: flex;
    /* Width is restricted to ensure a closer spread of the icons */
    width: 35%;
    align-self: center;
    justify-content: space-evenly;
}

/* Footer end*/

/* Home start */
.home-1__bg {
    background-image: url("./img/home/home-1.webp");
}

.home-1__overlay {
    display: flex;
    flex-direction: column;
    row-gap: 4vh;
    padding: 30vh 32vw;
    text-align: center;
    align-items: center;
    color: white;
}

.home-2 {
    display: grid;
    grid-template-columns: 1fr 1fr;
    margin: 10vh 5vw;
    gap: 5vw;
}

.home-2 > div:first-child {
    display: flex;
    flex-direction: column;
    row-gap: 1vh;
    /* Not 100% cause we wanna decrease the width of text shown*/
    width: 85%;
    place-content: center;
}

.home-2 > div:first-child > h1 {
    color: var(--ecf-green);
    padding: 1vh 0 2vh;
}

.home-2 > img {
    /* Magic to make it so that the image auto resizes */
    display: flex;
    max-width: 100%;
    max-height: 100%;
    width: auto;
    height: auto;
    align-self: center;
}

.home-3 {
    position: relative;
    width: 100vw;
}

.home-3__bg {
    display: flex;
    /* Flex shrink needed to ensure that the images will take up the full screen and not share it*/
    flex-shrink: 0;
    /* These shouldn't be necessary, but JIC ig */
    width: 100vw;
    height: 100vh;
    background-image: url("./img/home/home-3-post-1.webp");
}

.home-3__bg--2 {
    background-image: url("./img/home/home-3-post-2.webp");
}

.home-3__nav {
    display: flex;
    /* This is just absolute within the parent div */
    position: absolute;
    /* Left and right need to be so that width exactly == 100vw */
    --home-3-nav-width: 15vw;
    width: var(--home-3-nav-width);
    left: calc((100vw - var(--home-3-nav-width)) / 2);
    bottom: 10vh;
    justify-content: space-evenly;
    /* z index MUST be higher than that of home-3__posts*/
    z-index: 2;
}

.home-3__nav > a {
    width: 1rem;
    height: 1rem;
    border-radius: 50%;
}

.not-current-post {
    background-color: grey;
}

/* Current post styling is below .not-current-post to allow for cascading just in case */
.current-post {
    background-color: white;
}

.home-3__posts {
    display: flex;
    overflow: hidden;
    scroll-behavior: smooth;
    z-index: 1;
}

.home-3__post-overlay {
    display: flex;
    flex-direction: column;
    row-gap: 2vh;
    margin: 0 30vw 20vh 5vw;
    align-self: end;
    color: white;
}

/* Use padding to further separate the elements instead of just using row-gap because we don't want an even gap */
.home-3__post-overlay > h2 {
    padding: 0 0 1vh;
    line-height: 1.5;
}

.home-4 {
    display: grid;
    grid-template-rows: 1fr 2fr;
}

.home-4 > div:first-child {
    display: flex;
    flex-direction: row;
    padding: 15vh 5vw 5vh 0;
    justify-content: space-evenly;
}

.home-4__stats {
    display: flex;
    flex-direction: column;
    row-gap: 2vh;
}

/* Font sized is increased to draw more attention to the numbers */
.home-4__stats > h1 {
    font-size: calc(var(--h1-size) * 1.35);
    color: var(--ecf-green);
}

/* Set the first one to red cause we want to draw the most attention to that */
.home-4__stats:nth-child(1) > h1 {
    color: var(--ecf-red);
}

.home-4__stats > h2 {
    font-size: calc(var(--h2-size) * 1.35);
}

.home-4 > div:last-child {
    display: grid;
    grid-template-columns: 1fr 1fr;
    column-gap: 2vw;
    margin: 0 5vw;
}

.home-4 > div:last-child > img {
    display: flex;
    max-width: 100%;
    max-height: 100%;
    width: auto;
    height: auto;
    align-self: center;
    padding: 0 0 10vh;
}

.home-4 > div:last-child > div {
    display: flex;
    flex-direction: column;
    row-gap: 4vh;
    text-align: center;
    align-items: center;
    align-self: center;
}

.home-4__difference {
    color: var(--ecf-green);
}

/* Home end */

/* Get Involved start */
.get-involved-1 {
}

.get-involved-1__bg {
    background-image: url("./img/get-involved/get-involved-1.webp");
}

.get-involved-2 {
    display: flex;
    flex-direction: column;
    row-gap: 10vh;
    min-height: 40vh;
    padding: 20vh 5vw 10vh;
}

.get-involved-2 > div:first-child {
    display: flex;
    flex-direction: column;
    row-gap: 10vh;
    width: 30vw;
    align-self: center;
    align-items: center;
    text-align: center;
}

.get-involved-2 > div:last-child {
    display: flex;
    flex-direction: column;
    row-gap: 3vh;
}

.get-involved-2 > div:last-child > h1 {
    color: var(--ecf-green);
}

.get-involved-3 {
    position: relative;
}

.get-involved-3__bg {
    background-image: url("./img/get-involved/get-involved-3.webp");
}

.get-involved-3__oval {
    position: absolute;
    width: 145%;
    height: 100%;
    /* Position past left then hide overflow to achieve desired effect */
    left: -70%;
    overflow: hidden;
    background-color: var(--ecf-green-translucent);
    /* I literally have no idea why this works. Some horizontal and vertical radius magic ig */
    border-top-right-radius: 50% 100%;
}

.get-involved-3__overlay {
    display: flex;
    flex-direction: column;
    row-gap: 2vh;
    position: absolute;
    left: 52.5%;
    bottom: 20%;
    color: white;
}

.get-involved-3__overlay > h1 {
    width: 40vw;
    line-height: 1.5;
    font-size: calc(var(--h1-size) * 1.35);
    padding: 5vh 0;
}

.get-involved-3__overlay > h2 {
    width: 20vw;
    line-height: 1.5;
}

.get-involved-4 {
    display: flex;
    flex-direction: column;
    background-color: var(--ecf-green);
}

.get-involved-4 > div:first-child {
    display: flex;
    flex-direction: column;
    padding: 15vh 5vw 28vh;
    row-gap: 5vh;
    background-color: white;
}

.get-involved-4 > div:first-child > h1 {
    color: var(--ecf-green);
}

.get-involved-4 > div:nth-child(2) {
    display: flex;
    flex-wrap: wrap;
    column-gap: 2vw;
    row-gap: 5vh;
    padding: 5vh 1vw;
    /*
    abs(negative margin) needs to be less than the bottom padding for .getInvolved4 > div:first-child.
    This is needed so that the cards flow into a white background
    */
    margin: -20vh 0 0;
    justify-content: space-evenly;
}

.get-involved-4__past-event {
    width: 28vw;
    /* Arbitrary min-width to ensure that it wraps */
    min-width: var(--arbitrary-card-min-width);
    padding: 0 0 5vh;
    text-align: center;
    background-color: white;
}

.get-involved-4__past-event > img {
    width: 100%;
    height: 30vh;
}

.get-involved-4__past-event > div {
    padding: 1vh 3vw 0;
}

.get-involved-4__past-event h1 {
    font-size: calc(var(--h1-size) * 0.75);
}

.get-involved-4__past-event h2 {
    line-height: 1.5;
}

.get-involved-4__past-event--hidden {
    display: none;
}

.get-involved-4 > .transparent-button--white {
    align-self: center;
    margin: 3vh 0 5vh;
    min-width: var(--arbitrary-card-min-width);
}

.get-involved-4 > .transparent-button--hidden {
    display: none;
}

.get-involved-4__filler {
    height: 5vh;
    background-color: white;
}

/* Get Involved end */

/* About Us start */
.about-us-1__bg {
    background-image: url("./img/about-us/about-us-1.webp");
}

.about-us-2 {
    display: flex;
    flex-direction: column;
    row-gap: 10vh;
    min-height: 40vh;
    padding: 20vh 5vw 0;
}

.about-us-2__work {
    display: flex;
    flex-direction: row;
    justify-content: space-evenly;
    /* TODO green circles around the icons */
}

.about-us-2__work > div {
    display: flex;
    flex-direction: column;
    place-items: center;
}

.about-us-2__icons {
    /* The dimension of the width and height should be the same (it's ok to denote height in terms of vw and vice versa! */
    --icon-dimensions: 3vw;
    width: var(--icon-dimensions);
    height: var(--icon-dimensions);
    font-weight: 100;
    color: white;
    stroke: var(--ecf-green-translucent);
    stroke-width: 20;
    padding: 2vh;
    border-radius: 100%;
    background-color: var(--ecf-green-translucent);
}

.about-us-2 > div:last-child {
    display: flex;
    flex-direction: column;
    row-gap: 3vh;
}

.about-us-2 > div:last-child > h1 {
    color: var(--ecf-green);
}

.about-us-3 {
    --total-height: 160vh;
    display: grid;
    grid-template:
        "bc bc bc" calc(var(--total-height) / 2)
        "ab sk on" calc(var(--total-height) / 2)
        / 1fr 1fr 1fr;
    width: 100%;
    height: var(--total-height);
}

.about-us-3__bc {
    grid-area: bc;
}

.about-us-3__bc__bg {
    background-image: url("./img/about-us/about-us-bc.webp");
}

.about-us-3__ab {
    grid-area: ab;
}

/*
The following bg classes use a manual parallax effect. This is as the default class we use does not work in this specific scenario.
 */
.about-us-3__ab__bg {
    background: url("./img/about-us/about-us-ab.webp") left no-repeat fixed;
    background-size: calc(100vw / 3) 100%;
}

.about-us-3__sk {
    grid-area: sk;
}

.about-us-3__sk__bg {
    background: url("./img/about-us/about-us-sk.webp") center no-repeat fixed;
    background-size: calc(100vw / 3) 100%;
}

.about-us-3__on {
    grid-area: on;
}

.about-us-3__on__bg {
    background: url("./img/about-us/about-us-on.webp") right no-repeat fixed;
    background-size: calc(100vw / 3) 100%;
}

.about-us-3__bc,
.about-us-3__ab,
.about-us-3__sk,
.about-us-3__on {
    position: relative;
}

.about-us-3__overlay-primary {
    position: absolute;
    display: flex;
    flex-direction: column;
    row-gap: 2vh;
    --padding-vertical: 10vh;
    /* Enforce bottom height AND align bottom */
    bottom: var(--padding-vertical);
    padding: var(--padding-vertical) 3vw 0;
    width: 40vw;
    box-sizing: border-box;
    color: white;
}

.about-us-3__overlay-secondary {
    position: absolute;
    display: flex;
    flex-direction: column;
    row-gap: 2vh;
    --padding-horizontal: 2vw;
    --padding-vertical: 10vh;
    /* Enforce bottom height AND align bottom */
    bottom: var(--padding-vertical);
    /*
     If the percentage is too big, the width + padding will exceed the given grid cell space.
     For some reason, `box-sizing: border-box` does not work to prevent that.
     */
    padding: var(--padding-vertical) var(--padding-horizontal) 0;
    /* Multiply --horizontal by 2 as we need to account for both left and right padding */
    width: calc(100% - (2 * var(--padding-horizontal)));
    color: white;
}

/* About Us end */

/* Lazy loading NEEDS to be at the bottom to override all other styles */
.lazy-load {
    background-image: none;
}
